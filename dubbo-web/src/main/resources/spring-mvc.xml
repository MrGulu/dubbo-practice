<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/mvc
       http://www.springframework.org/schema/mvc/spring-mvc.xsd
       http://www.springframework.org/schema/context
	   http://www.springframework.org/schema/context/spring-context.xsd
       ">

    <!-- 自动扫描且只扫描@Controller -->
    <context:component-scan base-package="cn.tang"
                            use-default-filters="false">
        <context:include-filter type="annotation"
                                expression="org.springframework.stereotype.Controller" />
        <context:include-filter type="annotation"
                                expression="org.springframework.web.bind.annotation.ControllerAdvice" />
    </context:component-scan>

    <mvc:annotation-driven>
        <mvc:message-converters register-defaults="true">
            <!-- 将StringHttpMessageConverter的默认编码设为UTF-8 -->
            <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <constructor-arg value="UTF-8"/>
            </bean>
        </mvc:message-converters>
    </mvc:annotation-driven>

    <mvc:interceptors>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/static/**"/>
            <bean class="cn.tang.base.interceptor.XSSInterceptor"/>
        </mvc:interceptor>
        <mvc:interceptor>
            <mvc:mapping path="/**"/>
            <mvc:exclude-mapping path="/static/**"/>
            <bean class="cn.tang.base.interceptor.InvalidChracterInterceptor"/>
        </mvc:interceptor>
    </mvc:interceptors>

    <!-- spring3.0.4以后版本提供了mvc:resources -->
    <!-- 对静态资源文件的访问 -->
    <mvc:resources mapping="/static/**" location="/static/"/>

    <!-- 避免IE执行AJAX时,返回JSON出现下载文件 -->
    <bean id="mappingJacksonHttpMessageConverter" class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
        <property name="supportedMediaTypes">
            <list>
                <value>text/html;charset=UTF-8</value>
            </list>
        </property>
    </bean>

    <bean class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>

    <!-- 启动Spring MVC的注解功能，完成请求和注解POJO的映射 -->
    <bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- json转换器 -->
                <ref bean="mappingJacksonHttpMessageConverter"/>
            </list>
        </property>
    </bean>

    <!-- 自定义HandlerMethodExceptionResolver -->
    <!-- 为什么这个bean id必须是handlerExceptionResolver才能生效？
    写globalExceptionResolver的时候无论怎么搞都不起作用！一下午！！！而且还不能省略id ！！！-->
    <!--已解决：springmvc从容器中取自定义异常处理器时是通过指定的id去取的，这个id默认是handlerExceptionResolver-->
    <bean id="handlerExceptionResolver"
          class="cn.tang.base.exceptionhandler.GlobalExceptionResolver">
        <property name="defaultErrorView" value="/error/500"/>
        <property name="messageConverters" ref="mappingJacksonHttpMessageConverter"/>
        <property name="exceptionMappings">
            <props>
                <prop key="cn.tang.exception.BusinessException">/error/500</prop>
            </props>
        </property>
    </bean>

    <!-- 对模型视图名称的解析，即在模型视图名称添加前后缀 -->
    <bean id="viewResolver" class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/static/html"/>
        <property name="suffix" value=".html"/>
    </bean>
</beans>